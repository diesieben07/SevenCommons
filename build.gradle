buildscript {
    ext.kotlin_version = '1.1.2-2'
    ext.dokka_version = '0.9.13'

    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }

}
apply plugin: 'net.minecraftforge.gradle.forge'

apply plugin: 'maven'
apply plugin: 'maven-publish'

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

version = "0.1"
def ENV = System.getenv()
if (ENV.TRAVIS_BUILD_NUMBER) {
    version += "." + ENV.TRAVIS_BUILD_NUMBER
} else {
    version += "-SNAPSHOT"
}

group = "de.take_weiland.mods.commons" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SevenCommons"

minecraft {
    version = "1.11.2-13.20.0.2228"
    runDir = "run"

    replaceIn "internal/SevenCommons.java"
    replace "@VERSION@", project.version

    mappings = "snapshot_20170501"
}

//jar {
//    manifest {
//        attributes 'FMLCorePlugin': 'de.take_weiland.mods.commons.internal.SevenCommonsLoader'
//        attributes 'SevenCommonsInstalledVersion': '0'
//    }
//}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains:annotations:13.0"
    compile 'com.google.code.findbugs:jsr305:3.0.0'

    compile 'net.bytebuddy:byte-buddy:1.5.7'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "junit:junit:4.11"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.14'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:0.14'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.14'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}


dokka {
    moduleName = 'SevenCommons'
//    outputFormat = 'javadoc'
//    outputDirectory = "$buildDir/docs"
    processConfigurations = ['compile']
//    includes = ['packages.md', 'extra.md']
//    linkMapping {
//        dir = "src/main/kotlin"
//        url = ""
//        suffix = "#L"
//    }
    sourceDirs = files('src/main/kotlin', 'src/main/java')
}