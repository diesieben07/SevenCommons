buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'

version = "0.1"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
	version += "." + ENV.DRONE_BUILD_NUMBER
} else {
	version += ".local"
}

group= "de.take_weiland.mods.commons" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SevenCommons"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.3.1370-1.7.10"
    runDir = "eclipse"
	
	replaceIn "internal/SevenCommons.java"
	replace "@VERSION@", project.version
}

jar {
	manifest {
        attributes 'FMLCorePlugin': 'de.take_weiland.mods.commons.internal.SevenCommonsLoader'
        attributes 'SevenCommonsInstalledVersion': '0'
    }
}

tasks.build.dependsOn('sourceJar', 'deobfJar')

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.11'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}


artifacts {
	archives deobfJar 
	archives sourceJar
	archives jar
}

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains:annotations:13.0"
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    testCompile "junit:junit:4.11"
}

if (ENV.SC_MAVEN_URL) {
	uploadArchives {
		repositories.mavenDeployer {
			configuration = configurations.deployerJars
			repository(url: ENV.SC_MAVEN_URL) {
				authentication(userName: ENV.SC_MAVEN_USER, password: ENV.SC_MAVEN_PASS)
			}
		}
	}
}