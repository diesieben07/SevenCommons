buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

apply plugin: 'maven'
apply plugin: 'maven-publish'

version = "0.1"
def ENV = System.getenv()
if (ENV.TRAVIS_BUILD_NUMBER) {
    version += "." + ENV.TRAVIS_BUILD_NUMBER
} else {
    version += "-SNAPSHOT"
}

group = "de.take_weiland.mods.commons" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SevenCommons"

minecraft {
    version = "1.9.4-12.17.0.1964"
    runDir = "eclipse"

    replaceIn "internal/SevenCommons.java"
    replace "@VERSION@", project.version

    mappings = "snapshot_20160616"
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'de.take_weiland.mods.commons.internal.SevenCommonsLoader'
        attributes 'SevenCommonsInstalledVersion': '0'
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier = 'deobf'
//}
//
//task sourceJar(type: Jar) {
//    from sourceSets.main.allSource
//    classifier = 'sources'
//}

// compile SevenCommonsLoader separately, targeting Java 6
// for the warning message
task compileLoader(type: JavaCompile) {
    source = fileTree(dir: "src/main/java")
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.output.classesDir
    include 'de/take_weiland/mods/commons/internal/SevenCommonsLoader*'
    include 'de/take_weiland/mods/commons/util/JavaCompatibility*'
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

compileJava {
    exclude 'de/take_weiland/mods/commons/internal/SevenCommonsLoader*'
    exclude 'de/take_weiland/mods/commons/util/JavaCompatibility*'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

tasks.compileJava.dependsOn('compileLoader')
//tasks.build.dependsOn('sourceJar', 'deobfJar')

artifacts {
//    archives deobfJar
    archives sourceJar
    archives jar
}

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains:annotations:13.0"
    compile 'com.google.code.findbugs:jsr305:3.0.0'

    compile 'net.bytebuddy:byte-buddy:1.5.7'

    compile "org.freemarker:freemarker:2.3.25-incubating"
    compile 'com.google.googlejavaformat:google-java-format:1.0'

    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    testCompile "junit:junit:4.11"

    compile files("${System.getProperty('java.home')}/../lib/tools.jar")
}

idea.module.inheritOutputDirs = true

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

if (ENV.SC_MAVEN_URL && ENV.TRAVIS_PULL_REQUEST == "false") { // only upload on travis and not for PRs
    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: ENV.SC_MAVEN_URL) {
                authentication(userName: ENV.SC_MAVEN_USER, password: ENV.SC_MAVEN_PASS)
            }
        }
    }
}